<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

		<display-name>Archetype Created Web Application</display-name>
			<!-- 解决post乱码 -->
			<filter>
				<filter-name>CharacterEncodingFilter</filter-name>
				<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
				<init-param>
					<param-name>encoding</param-name>
					<param-value>utf-8</param-value>
				</init-param>
				<init-param>
					<param-name>forceEncoding</param-name>
					<param-value>true</param-value>
				</init-param>
			</filter>
			<filter-mapping>
				<filter-name>CharacterEncodingFilter</filter-name>
				<url-pattern>/*</url-pattern>
			</filter-mapping>
	<!-- 配置SpringMVC中负责处理请求的核心Servlet，也被称为SpringMVC的前端控制器 -->
	<servlet>
	    <servlet-name>DispatcherServlet</servlet-name>
	    <!-- DispatcherServlet的全类名 -->
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <!-- 通过初始化参数指定SpringMVC配置文件位置 -->
	    <init-param>
	        <!-- 如果不记得contextConfigLocation配置项的名称，可以到DispatcherServlet的父类FrameworkServlet中查找 -->
	        <param-name>contextConfigLocation</param-name>
	        <!-- 使用classpath:说明这个路径从类路径的根目录开始才查找 -->
	        <param-value>classpath:springmvc.xml</param-value>
	    </init-param>
	    <!-- 作为框架的核心组件，在启动过程中有大量的初始化操作要做，这些操作放在第一次请求时才执行非常不恰当 -->
	    <!-- 我们应该将DispatcherServlet设置为随Web应用一起启动 -->
	    <load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
	    <servlet-name>DispatcherServlet</servlet-name>
	    <!-- 对DispatcherServlet来说，url-pattern有两种方式配置 -->
	    <!-- 方式一：配置“/”，表示匹配整个Web应用范围内所有请求。这里有一个硬性规定：不能写成“/*”。只有这一个地方有这个特殊要求，以后我们再配置Filter还是可以正常写“/*”。 -->
	    <!-- 方式二：配置“*.扩展名”，表示匹配整个Web应用范围内部分请求 -->
	    <url-pattern>*.do</url-pattern>
	</servlet-mapping>
</web-app>